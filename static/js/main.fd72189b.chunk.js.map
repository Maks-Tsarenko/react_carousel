{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","itemWidth","frameSize","step","animationDuration","infinite","maxPosition","length","className","style","width","border","borderRadius","transform","transition","map","image","index","src","alt","type","onClick","newPosition","setState","Math","min","disabled","max","Component","App","htmlFor","id","value","onChange","event","target","checked","currentTarget","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd72189b.chunk.js","sourcesContent":["/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ninterface State {\n  position: number,\n}\n\nexport class Carousel extends Component<Props, State> {\n  state: State = {\n    position: 0,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const maxPosition = -(images.length * itemWidth - frameSize * itemWidth);\n\n    const clickNext = () => {\n      const newPosition = position - itemWidth * step;\n\n      if (infinite && (position === maxPosition)) {\n        this.setState({ position: 0 });\n\n        return;\n      }\n\n      this.setState({ position: Math.max(newPosition, maxPosition) });\n    };\n\n    const clickPrev = () => {\n      const newPosition = position + itemWidth * step;\n\n      if (infinite && !position) {\n        this.setState({ position: maxPosition });\n\n        return;\n      }\n\n      this.setState({ position: Math.min(newPosition, 0) });\n    };\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: itemWidth * frameSize }}\n      >\n        <div\n          className=\"Container\"\n          style={{\n            border: '2px solid grey',\n            borderRadius: '70px',\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => {\n              return (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={`${index + 1}`}\n                    width={itemWidth}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button Carousel__button-left \"\n            type=\"button\"\n            onClick={clickPrev}\n            disabled={!infinite && position === 0}\n          />\n\n          <button\n            data-cy=\"next\"\n            className=\" Carousel__button Carousel__button-right\"\n            type=\"button\"\n            onClick={clickNext}\n            disabled={!infinite && position === maxPosition}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const changeItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ itemWidth: +event.target.value });\n    };\n\n    const changeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ frameSize: +event.target.value });\n    };\n\n    const changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ step: +event.target.value });\n    };\n\n    // eslint-disable-next-line max-len\n    const changeAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ animationDuration: +event.target.value });\n    };\n\n    const changeInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ infinite: event.currentTarget.checked });\n    };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n        <div className=\"App__inputs\">\n          <label\n            htmlFor=\"itemWidthInput\"\n            className=\"App__label\"\n          >\n            Item width\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"itemWidthInput\"\n              value={itemWidth}\n              min={100}\n              max={230}\n              step={10}\n              onChange={changeItemWidth}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameSizeInput\"\n            className=\"App__label\"\n          >\n            Frame size\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"frameSizeInput\"\n              value={frameSize}\n              min={1}\n              max={10}\n              onChange={changeFrameSize}\n            />\n          </label>\n\n          <label\n            htmlFor=\"stepInput\"\n            className=\"App__label\"\n          >\n            Step\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"stepInput\"\n              value={step}\n              min={1}\n              max={9}\n              onChange={changeStep}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationDurationInput\"\n            className=\"App__label\"\n          >\n            Animation Duration\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"animationDurationInput\"\n              value={animationDuration}\n              step={100}\n              onChange={changeAnimationDuration}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infiniteInput\"\n            className=\"App__label\"\n          >\n            Infinite\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              id=\"infiniteInput\"\n              checked={infinite}\n              onChange={changeInfinite}\n            />\n          </label>\n\n        </div>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}